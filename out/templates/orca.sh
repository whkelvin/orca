#!/bin/bash

# Created by argbash-init v2.10.0


# ARG_OPTIONAL_SINGLE([name])

# ARG_OPTIONAL_SINGLE([adj])


# ARG_HELP([<The general help message of my script>])
# ARGBASH_GO()
# needed because of Argbash --> m4_ignore([
### START OF CODE GENERATED BY Argbash v2.10.0 one line above ###
# Argbash is a bash code generator used to get arguments parsing right.
# Argbash is FREE SOFTWARE, see https://argbash.io for more info


die()
{
	local _ret="${2:-1}"
	test "${_PRINT_HELP:-no}" = yes && print_help >&2
	echo "$1" >&2
	exit "${_ret}"
}


begins_with_short_option()
{
	local first_option all_short_options='h'
	first_option="${1:0:1}"
	test "$all_short_options" = "${all_short_options/$first_option/}" && return 1 || return 0
}

# THE DEFAULTS INITIALIZATION - OPTIONALS
_arg_name=
_arg_adj=


print_help()
{
	printf '%s\n' "<The general help message of my script>"
	printf 'Usage: %s [--name <arg>] [--adj <arg>] [-h|--help]\n' "$0"
	printf '\t%s\n' "-h, --help: Prints help"
}


parse_commandline()
{
	while test $# -gt 0
	do
		_key="$1"
		case "$_key" in
			--name)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_name="$2"
				shift
				;;
			--name=*)
				_arg_name="${_key##--name=}"
				;;
			--adj)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_adj="$2"
				shift
				;;
			--adj=*)
				_arg_adj="${_key##--adj=}"
				;;
			-h|--help)
				print_help
				exit 0
				;;
			-h*)
				print_help
				exit 0
				;;
			*)
				_PRINT_HELP=yes die "FATAL ERROR: Got an unexpected argument '$1'" 1
				;;
		esac
		shift
	done
}

parse_commandline "$@"

# OTHER STUFF GENERATED BY Argbash

### END OF CODE GENERATED BY Argbash (sortof) ### ])
# [ <-- needed because of Argbash

#


printf 'Value of --%s: %s\n' 'name' "$_arg_name"

printf 'Value of --%s: %s\n' 'adj' "$_arg_adj"


echo "Hello $_arg_name, you are $_arg_adj !!!"


#
# ] <-- needed because of Argbash
