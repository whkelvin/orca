#!/bin/bash

# m4_ignore(
#)Created by argbash-init v2.10.0

   
# ARG_OPTIONAL_SINGLE([username], [o])
  
# ARG_OPTIONAL_SINGLE([password])
  
# ARG_OPTIONAL_SINGLE([path])
  
# ARG_OPTIONAL_SINGLE([image-name])
  
# ARG_OPTIONAL_SINGLE([image-tag])


# ARG_HELP([<The general help message of my script>])
# ARGBASH_GO

# [

maskPrint () {
  local perc=75  ## percent to obfuscate
  local i=0
  for((i=0; i < ${#1}; i++))
  do
    if [ $(( $RANDOM % 100 )) -lt "$perc" ]
    then
        printf '%s' '*'
    else
        printf '%s' "${1:i:1}"
    fi
  done
  echo
}

printf '===== ENV VARIABLES ====='
  
printf '%s: ' 'TEST_ENV'
maskPrint "$TEST_ENV"
            

printf '===== INPUT ARGUMENTS ====='
    
printf 'Value of --%s: %s\n' 'username' "$_arg_username"
    
printf 'Value of --%s: %s\n' 'password' "$_arg_password"
    
printf 'Value of --%s: %s\n' 'path' "$_arg_path"
    
printf 'Value of --%s: %s\n' 'image-name' "$_arg_image_name"
    
printf 'Value of --%s: %s\n' 'image-tag' "$_arg_image_tag"
  

docker image build -t "$_arg_image_name":"$_arg_tag" -f $_arg_path .
docker login -u "$_arg_username" -p "$_arg_password"
docker tag "$_arg_image_name" "$_arg_username"/"$_arg_image_name"
docker image push "$_arg_username"/"$_arg_image_name"


# ]
